Files already downloaded and verified
Files already downloaded and verified
number of labeled pool: 1000
number of unlabeled pool: 24000
number of testing pool: 10000
CIFAR10
fisher_mask_sampling
2 0 training accuracy: 0.126
3 0 training accuracy: 0.174
4 0 training accuracy: 0.218
5 0 training accuracy: 0.243
6 0 training accuracy: 0.279
7 0 training accuracy: 0.287
8 0 training accuracy: 0.3
9 0 training accuracy: 0.31
10 0 training accuracy: 0.352
11 1 training accuracy: 0.334
12 0 training accuracy: 0.374
13 1 training accuracy: 0.366
14 2 training accuracy: 0.372
15 0 training accuracy: 0.391
16 0 training accuracy: 0.396
17 0 training accuracy: 0.423
18 0 training accuracy: 0.434
19 1 training accuracy: 0.426
20 2 training accuracy: 0.434
21 0 training accuracy: 0.448
22 1 training accuracy: 0.444
23 0 training accuracy: 0.449
24 1 training accuracy: 0.445
25 0 training accuracy: 0.465
26 0 training accuracy: 0.494
27 1 training accuracy: 0.492
28 0 training accuracy: 0.506
29 1 training accuracy: 0.487
30 0 training accuracy: 0.515
31 0 training accuracy: 0.526
32 0 training accuracy: 0.541
33 1 training accuracy: 0.534
34 2 training accuracy: 0.525
35 0 training accuracy: 0.546
36 0 training accuracy: 0.565
37 1 training accuracy: 0.529
38 0 training accuracy: 0.576
39 0 training accuracy: 0.579
40 1 training accuracy: 0.573
41 0 training accuracy: 0.591
42 0 training accuracy: 0.599
43 0 training accuracy: 0.601
44 0 training accuracy: 0.624
45 1 training accuracy: 0.621
46 2 training accuracy: 0.608
47 0 training accuracy: 0.627
48 0 training accuracy: 0.629
49 1 training accuracy: 0.612
50 0 training accuracy: 0.645
51 1 training accuracy: 0.634
52 0 training accuracy: 0.661
53 0 training accuracy: 0.665
54 0 training accuracy: 0.669
55 1 training accuracy: 0.669
56 0 training accuracy: 0.674
57 0 training accuracy: 0.691
58 1 training accuracy: 0.678
59 2 training accuracy: 0.677
60 0 training accuracy: 0.699
61 1 training accuracy: 0.697
62 0 training accuracy: 0.711
63 0 training accuracy: 0.713
64 0 training accuracy: 0.721
65 0 training accuracy: 0.736
66 0 training accuracy: 0.747
67 0 training accuracy: 0.771
68 1 training accuracy: 0.736
69 2 training accuracy: 0.738
70 3 training accuracy: 0.753
71 4 training accuracy: 0.752
72 5 training accuracy: 0.77
73 0 training accuracy: 0.79
74 1 training accuracy: 0.789
75 2 training accuracy: 0.785
76 0 training accuracy: 0.791
77 1 training accuracy: 0.782
78 0 training accuracy: 0.797
79 0 training accuracy: 0.808
80 0 training accuracy: 0.814
81 1 training accuracy: 0.814
82 2 training accuracy: 0.813
83 0 training accuracy: 0.833
84 0 training accuracy: 0.838
85 1 training accuracy: 0.82
86 0 training accuracy: 0.841
87 1 training accuracy: 0.821
88 0 training accuracy: 0.847
89 1 training accuracy: 0.839
90 0 training accuracy: 0.854
91 1 training accuracy: 0.847
92 2 training accuracy: 0.848
93 0 training accuracy: 0.861
94 0 training accuracy: 0.862
95 0 training accuracy: 0.863
96 0 training accuracy: 0.88
97 1 training accuracy: 0.863
98 2 training accuracy: 0.871
99 0 training accuracy: 0.891
100 1 training accuracy: 0.887
101 2 training accuracy: 0.881
102 3 training accuracy: 0.878
103 4 training accuracy: 0.886
104 0 training accuracy: 0.895
105 1 training accuracy: 0.889
106 2 training accuracy: 0.893
107 0 training accuracy: 0.897
108 0 training accuracy: 0.898
109 1 training accuracy: 0.885
110 0 training accuracy: 0.912
111 0 training accuracy: 0.926
112 1 training accuracy: 0.912
113 2 training accuracy: 0.91
114 3 training accuracy: 0.911
115 4 training accuracy: 0.917
116 0 training accuracy: 0.932
117 1 training accuracy: 0.926
118 0 training accuracy: 0.933
119 1 training accuracy: 0.924
120 2 training accuracy: 0.927
121 3 training accuracy: 0.924
122 0 training accuracy: 0.948
123 1 training accuracy: 0.93
124 2 training accuracy: 0.941
125 3 training accuracy: 0.939
126 4 training accuracy: 0.935
127 0 training accuracy: 0.95
128 1 training accuracy: 0.946
129 0 training accuracy: 0.954
130 1 training accuracy: 0.948
131 2 training accuracy: 0.951
132 3 training accuracy: 0.947
133 4 training accuracy: 0.95
134 0 training accuracy: 0.959
135 0 training accuracy: 0.966
136 1 training accuracy: 0.958
137 2 training accuracy: 0.955
138 3 training accuracy: 0.949
139 4 training accuracy: 0.958
140 0 training accuracy: 0.968
141 1 training accuracy: 0.954
142 2 training accuracy: 0.952
143 3 training accuracy: 0.956
144 4 training accuracy: 0.967
145 5 training accuracy: 0.96
146 0 training accuracy: 0.969
147 1 training accuracy: 0.961
148 2 training accuracy: 0.966
149 3 training accuracy: 0.964
150 4 training accuracy: 0.967
151 0 training accuracy: 0.971
152 1 training accuracy: 0.967
153 2 training accuracy: 0.962
154 3 training accuracy: 0.961
155 4 training accuracy: 0.967
156 5 training accuracy: 0.97
157 0 training accuracy: 0.978
158 1 training accuracy: 0.974
159 2 training accuracy: 0.973
160 0 training accuracy: 0.98
161 1 training accuracy: 0.972
162 2 training accuracy: 0.963
163 3 training accuracy: 0.977
164 4 training accuracy: 0.966
165 0 training accuracy: 0.985
166 1 training accuracy: 0.978
167 2 training accuracy: 0.979
168 3 training accuracy: 0.973
169 4 training accuracy: 0.982
170 5 training accuracy: 0.973
171 6 training accuracy: 0.971
172 7 training accuracy: 0.977
173 8 training accuracy: 0.98
174 9 training accuracy: 0.978
175 10 training accuracy: 0.974
176 0 training accuracy: 0.987
177 1 training accuracy: 0.979
178 2 training accuracy: 0.982
179 3 training accuracy: 0.975
180 4 training accuracy: 0.983
181 0 training accuracy: 0.988
182 1 training accuracy: 0.985
183 2 training accuracy: 0.985
184 3 training accuracy: 0.988
185 0 training accuracy: 0.99
1000	testing accuracy 0.4292
Round 1
Random calculate_mask took  0.07002735137939453  seconds.
log_prob_grads_wrt took  2057.648687839508  seconds.
getting fisher matrix ...
Traceback (most recent call last):
  File "/home/sgchr/active_nn/experiments.py", line 396, in <module>
    main()
  File "/home/sgchr/active_nn/experiments.py", line 387, in main
    exper("FISH",X_tr, Y_tr, idxs_lb, net, handler, args, X_te, Y_te, DATA_NAME)
  File "/home/sgchr/active_nn/experiments.py", line 141, in exper
    output = strategy.query(NUM_QUERY)
  File "/home/sgchr/active_nn/query_strategies/fisher_mask_sampling.py", line 280, in query
    op = torch.sum(torch.matmul(xt_.transpose(1,2), xt_) / (len(xt)), 0)#.detach().cpu()
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 18.63 GiB (GPU 0; 31.75 GiB total capacity; 18.76 GiB already allocated; 11.70 GiB free; 18.77 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
